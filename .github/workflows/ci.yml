name: 🔍 CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  CARGO_TERM_COLOR: always

jobs:
  test-frontend:
    name: 🧪 Frontend Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚡ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🔨 Build frontend
        run: pnpm build

      - name: 🧪 Run frontend tests
        run: pnpm test --run
        continue-on-error: true

  test-backend:
    name: 🦀 Backend Tests
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🦀 Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt, clippy
          override: true

      - name: 🧪 Run backend tests
        run: |
          cd src-tauri
          cargo test --verbose

      - name: 📝 Check formatting
        run: |
          cd src-tauri
          cargo fmt -- --check

      - name: 🔍 Run Clippy
        run: |
          cd src-tauri
          cargo clippy -- -D warnings

  build-tauri:
    name: 🏗️ Build Tauri App
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚡ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🔧 Install system dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 📥 Install frontend dependencies
        run: pnpm install

      - name: 🏗️ Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: app-v__VERSION__
          releaseName: "App v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false

  security-scan:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: 📤 Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results.sarif"

  code-quality:
    name: 📊 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⚡ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 🔍 Run ESLint
        run: pnpm lint
        continue-on-error: true

      - name: 💅 Check Prettier formatting
        run: pnpm format:check
        continue-on-error: true
