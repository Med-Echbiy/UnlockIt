name: 🚀 Release

on:
  push:
    tags:
      - "v*"
    branches:
      - release

env:
  CARGO_TERM_COLOR: always

jobs:
  create-release:
    name: 🏷️ Create Release
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create-release.outputs.result }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚡ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 📥 Install dependencies
        run: pnpm install

      - name: 📊 Get version
        run: echo "PACKAGE_VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: 🏷️ Create release
        id: create-release
        uses: actions/github-script@v7
        with:
          script: |
            const { data } = await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: `v${process.env.PACKAGE_VERSION}`,
              name: `UnlockIt v${process.env.PACKAGE_VERSION}`,
              body: `🎮 **UnlockIt v${process.env.PACKAGE_VERSION}** - Ultimate Achievement Tracker
              
              ## 🌟 What's New
              
              ### ✨ New Features
              - Enhanced achievement tracking system
              - Improved game library management
              - Better notification system
              - UI/UX improvements
              
              ### 🐛 Bug Fixes
              - Fixed achievement synchronization issues
              - Resolved playtime tracking problems
              - Improved application stability
              
              ### 🔧 Technical Improvements
              - Performance optimizations
              - Code quality improvements
              - Updated dependencies
              
              ## 📦 Installation
              
              1. Download the appropriate installer for your platform below
              2. Run the installer and follow the setup wizard
              3. Launch UnlockIt and start tracking your achievements!
              
              ## 🆕 First Time Users
              
              1. Get your Steam API key from [Steam Web API](https://steamcommunity.com/dev/apikey)
              2. Open UnlockIt settings and add your Steam API key
              3. Start adding your favorite games to track achievements
              
              ## ❤️ Support Development
              
              If you love UnlockIt, consider supporting us on [Patreon](https://www.patreon.com/your-patreon-link)!
              
              ---
              
              **Full Changelog**: https://github.com/${context.repo.owner}/${context.repo.repo}/compare/v${process.env.PREVIOUS_VERSION || '0.0.0'}...v${process.env.PACKAGE_VERSION}`,
              draft: false,
              prerelease: false
            })
            return data.id

  build-release:
    name: 🏗️ Build Release
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: ⚡ Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: 🦀 Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: 🔧 Install system dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: 📥 Install frontend dependencies
        run: pnpm install

      - name: 🏗️ Build Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          releaseId: ${{ needs.create-release.outputs.release_id }}

  notify-release:
    name: 📢 Notify Release
    needs: [create-release, build-release]
    runs-on: ubuntu-latest
    steps:
      - name: 📢 Notify successful release
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.repos.createDispatchEvent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              event_type: 'release-completed',
              client_payload: {
                release_id: '${{ needs.create-release.outputs.release_id }}',
                version: context.ref.replace('refs/tags/', '')
              }
            })
